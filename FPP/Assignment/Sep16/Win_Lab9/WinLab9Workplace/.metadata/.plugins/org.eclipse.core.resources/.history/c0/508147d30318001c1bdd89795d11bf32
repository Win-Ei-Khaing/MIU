package prog9_3_startup;

import java.util.Arrays;

public class ArrayQueueImpl {
	private int[] arr = new int[10];
	private int size = 0;
	private int front = 0;
	private int rear = 0;

	public boolean isEmpty() {
		return size == 0;
	}


	public int dequeue() {
		int deletedValue=arr[size];
		arr[size--]=0;
		rear=arr[size];
		System.out.println(deletedValue+"_"+rear);
		return deletedValue;
	}
	public int peek() {
		if(isEmpty()) throw new IllegalStateException("Cannot peek because Queue is empty!");
		return front;
	}
	
	public void enqueue(int i) {
		if(size==arr.length) resize();
		arr[size++]=i;
		if(size==0)//mark front for the very first insertion
			front=arr[0];
	}

	public int size() {
		return size;
	}

	public void resize() {
		int[] newAry=new int[arr.length*2];
		System.arraycopy(arr, 0, newAry, 0, size());
		arr=newAry;
	}

	public static void main(String[] args) {
		ArrayQueueImpl q = new ArrayQueueImpl();
		//uncomment when ready
		for(int i = 0; i < 15; i ++)
			q.enqueue(i);
		System.out.println(Arrays.toString(q.arr));
		for(int i = 0; i < 14; i ++)
			q.dequeue();
		System.out.println(q.size());
		System.out.println(q.peek());
	}
}

