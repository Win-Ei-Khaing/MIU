import java.util.Arrays;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.Stack;

public class Test {
public static void main(String[] args) {
	var q=new Stack<String>();
	q.push("Bob");
	q.push("Harry");
	q.push("Alice");
	System.out.println(q.pop());
	System.out.println(q.size());
	System.out.println(q.peek());
	System.out.println(q.size());
	System.out.println(q);
	/*Student s1=new Student(1, "Win", 4.0f);
	Student s2=new Student(1, "Win", 4.0f);
	System.out.println(s1.equals(s2));*/
	
	
	/*Integer[] nums = {3,1,5,2,4};

	System.out.println(nums[0] + " " + nums[1] + " "+nums[2] + " " + nums[3] + " "+nums[4]);
	Arrays.sort(nums, new Comparator<Integer>() {
		@Override
		public int compare(Integer n1, Integer n2) {
			return n1.compareTo(n2);
		}
		
	});
	
	System.out.println(nums[0] + " " + nums[1] + " "+nums[2] + " " + nums[3] + " "+nums[4]);
	*/
	
	//recurse("Hello");
}
/*static String recurse(String s) {
	if(s==null || s.equals("")) return "";
	int n=s.length();
	String t=new StringBuilder().append(s).reverse().toString();
	return recurse(t);
}*/
}
