package lambdalib;

import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import quizclasses.Employee;
import quizclasses.Pair;


public class LambdaLibrary {
	public final static String IMPLEMENT = "implement!";
	
	//sample query
	public final static TriFunction<List<Employee>, Integer, Integer, List<Employee>> SAMPLE
	   = (list, namelength, year) -> list.stream()
	                                     .filter(e -> e.getName().length() > namelength)
	                                     .filter(e -> e.getYearOfBirth() > year)
	                                     .collect(Collectors.toList());
	   
	  public final static TriFunction<List<Employee>, Integer, Integer, List<Pair>> PROB1
	  =(list, minSalary, maxSalary) -> list.stream()
		.filter(e->(e.getSalary()>minSalary && e.getSalary()<maxSalary))
		.sorted(Comparator.comparing(Employee::getName).thenComparing(Employee::getSalary))
		.map((Employee e)->new Pair(e.getName(), e.getSalary()))
		.collect(Collectors.toList());
}
