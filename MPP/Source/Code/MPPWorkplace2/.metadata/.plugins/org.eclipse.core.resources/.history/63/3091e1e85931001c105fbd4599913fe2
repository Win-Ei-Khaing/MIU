package Final.prob3.exam;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Stream;

//DO NOT MODIFY METHOD SIGNATURE OR STATIC QUALIFIER
public class FindOldestPerson {
	@SuppressWarnings("unchecked")
	public static Person findOldestPerson(List<Person> persons) {
		return ((Stream<Person>) Optional.ofNullable(persons).orElse(new ArrayList<Person>())).reduce(persons.get(0), (x, y)->x.getAge()>y.getAge()?x:y);
		
		//return (persons==null || persons.size()==0)? null : persons.stream().reduce(persons.get(0), (x, y)->x.getAge()>y.getAge()?x:y);
		//		System.out.println(oldest.toString());
		//		
		//		
		//		// implement
		//		Person oldestPerson = persons.stream().reduce(persons.get(0),
		//				(p1, p2) -> {
		//					if (p1.getAge() > p2.getAge()) {
		//						return p1;
		//					} else {
		//						return p2;
		//					}
		//				});
		//		return oldestPerson;
	}

}
